/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 21-Aug-2025 5:52:06 PM 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Sequences for Autonumber Columns */

DROP SEQUENCE IF EXISTS appointment_id_seq
;

DROP SEQUENCE IF EXISTS availabilitytimeslot_id_seq
;

DROP SEQUENCE IF EXISTS notificationbase_id_seq
;

DROP SEQUENCE IF EXISTS scheduledservice_id_seq
;

DROP SEQUENCE IF EXISTS service_id_seq
;

DROP SEQUENCE IF EXISTS serviceoffer_id_seq
;

DROP SEQUENCE IF EXISTS useraccount_id_seq
;

/* Drop Tables */

DROP TABLE IF EXISTS "Appointment" CASCADE
;

DROP TABLE IF EXISTS "AppointmentNotification" CASCADE
;

DROP TABLE IF EXISTS "Assistant" CASCADE
;

DROP TABLE IF EXISTS "AvailabilityTimeSlot" CASCADE
;

DROP TABLE IF EXISTS "Client" CASCADE
;

DROP TABLE IF EXISTS "GeneralNotification" CASCADE
;

DROP TABLE IF EXISTS "NotificationBase" CASCADE
;

DROP TABLE IF EXISTS "NotificationRecipient" CASCADE
;

DROP TABLE IF EXISTS "ScheduledService" CASCADE
;

DROP TABLE IF EXISTS "Service" CASCADE
;

DROP TABLE IF EXISTS "ServiceOffer" CASCADE
;

DROP TABLE IF EXISTS "SystemNotification" CASCADE
;

DROP TABLE IF EXISTS "UnavailableTimeSlot" CASCADE
;

DROP TABLE IF EXISTS "UserAccount" CASCADE
;

DROP TABLE IF EXISTS "UserInformation" CASCADE
;

CREATE TYPE "ClientStatusType" AS ENUM ('ENABLED', 'DISABLED', 'DELETED');

CREATE TYPE "AssistantStatusType" AS ENUM ('ENABLED', 'DISABLED', 'DELETED');

CREATE TYPE "AccountStatusType" AS ENUM ('ENABLED','DISABLED','DELETED');

CREATE TYPE "ServiceStatusType" AS ENUM ('ENABLED', 'DISABLED', 'DELETED');

CREATE TYPE "AppointmentStatusType" AS ENUM ('SCHEDULED','CONFIRMED', 'CANCELED', 'FINISHED', 'RESCHEDULED');

CREATE TYPE "RoleType" AS ENUM ('ADMINISTRATOR', 'CLIENT', 'ASSISTANT');

CREATE TYPE "ServiceOfferStatusType" AS ENUM ('ENABLED', 'DISABLED', 'DELETED');

CREATE TYPE "AvailabilityTimeSlotStatusType" AS ENUM ('ENABLED', 'DISABLED', 'DELETED');

CREATE TYPE "NotificationStatusType" AS ENUM('READ', 'UNREAD');

CREATE TYPE "NotificationType" AS ENUM('APPOINTMENT_NOTIFICATION', 'PAYMENT_NOTIFICATION', 'SYSTEM_NOTIFICATION', 'GENERAL_NOTIFICATION');

CREATE TYPE "AppointmentNotificationCodeType" AS ENUM('APPOINTMENT_SCHEDULED', 'APPOINTMENT_RESCHEDULED', 'APPOINTMENT_CANCELED', 'APPOINTMENT_REMINDER', 'APPOINTMENT_CONFIRMED');

CREATE TYPE "GeneralNotificationCodeType" AS ENUM('GENERAL_WELCOME', 'GENERAL_NEWS', 'GENERAL_PROMOTION', 'GENERAL_SERVICE_UPDATE');

CREATE TYPE "SystemNotificationCodeType" AS ENUM('SYSTEM_MAINTENANCE', 'SYSTEM_ERROR', 'SYSTEM_UPDATE', 'SYSTEM_BACKUP', 'SYSTEM_SECURITY', 'SYSTEM_THRESHOLD', 'SYSTEM_CONFIG_CHANGE');

CREATE TYPE "SystemNotificationSeverityCodeType" AS ENUM('INFO', 'WARNING', 'CRITICAL');


/* Create Tables */

CREATE TABLE "Appointment"
(
	status "AppointmentStatusType" NULL,
	total_cost numeric NULL,
	uuid uuid NULL,
	id integer NOT NULL   DEFAULT NEXTVAL(('"appointment_id_seq"'::text)::regclass),
	created_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP,
	id_client integer NULL,
	start_date timestamp without time zone NULL,
	end_date timestamp without time zone NULL
)
;

CREATE TABLE "AppointmentNotification"
(
	id_appointment integer NULL,
	id_notification integer NULL,
	code "AppointmentNotificationCodeType" NULL
)
;

CREATE TABLE "Assistant"
(
	id_user_account integer NOT NULL,
	status "AssistantStatusType" NULL
)
;

CREATE TABLE "AvailabilityTimeSlot"
(
	id integer NOT NULL   DEFAULT NEXTVAL(('"availabilitytimeslot_id_seq"'::text)::regclass),
	uuid uuid NULL,
	created_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP,
	id_assistant integer NOT NULL,
	status "AvailabilityTimeSlotStatusType" NULL,
	start_date timestamp without time zone NULL,
	end_date timestamp without time zone NULL
)
;

CREATE TABLE "Client"
(
	id_user_account integer NOT NULL,
	status "ClientStatusType" NULL
)
;

CREATE TABLE "GeneralNotification"
(
	code "GeneralNotificationCodeType" NULL,
	id_notification integer NULL
)
;

CREATE TABLE "NotificationBase"
(
	id integer NOT NULL   DEFAULT NEXTVAL(('"notificationbase_id_seq"'::text)::regclass),
	uuid uuid NULL,
	created_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP,
	message text NULL,
	type "NotificationType" NULL
)
;

CREATE TABLE "NotificationRecipient"
(
	id_user_account integer NULL,
	id_notification integer NULL,
	status "NotificationStatusType" NULL,
	changed_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP
)
;

CREATE TABLE "ScheduledService"
(
	"id_serviceOffer" integer NULL,
	id_appointment integer NULL,
	start_time time without time zone NULL,
	end_time time without time zone NULL,
	service_name varchar(100) NULL,
	service_price double precision NULL,
	service_minutes integer NULL,
	uuid uuid NULL,
	id integer NOT NULL   DEFAULT NEXTVAL(('"scheduledservice_id_seq"'::text)::regclass)
)
;

CREATE TABLE "Service"
(
	description text NULL,
	minutes integer NULL,
	name varchar(100) NULL,
	price double precision NULL,
	id integer NOT NULL   DEFAULT NEXTVAL(('"service_id_seq"'::text)::regclass),
	uuid uuid NULL,
	created_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP,
	status "ServiceStatusType" NULL
)
;

CREATE TABLE "ServiceOffer"
(
	id_assistant integer NULL,
	id_service integer NULL,
	uuid uuid NULL,
	id integer NOT NULL   DEFAULT NEXTVAL(('"serviceoffer_id_seq"'::text)::regclass),
	status "ServiceOfferStatusType" NULL
)
;

CREATE TABLE "SystemNotification"
(
	severity "SystemNotificationSeverityCodeType" NULL,
	code "SystemNotificationCodeType" NULL,
	id_notification integer NULL
)
;

CREATE TABLE "UnavailableTimeSlot"
(
	start_time time without time zone NULL,
	end_time time without time zone NULL,
	id_availability_time_slot integer NULL
)
;

CREATE TABLE "UserAccount"
(
	email varchar(100) NULL,
	password varchar(100) NULL,
	username varchar(50) NULL,
	created_at timestamp without time zone NULL   DEFAULT CURRENT_TIMESTAMP,
	id integer NOT NULL   DEFAULT NEXTVAL(('"useraccount_id_seq"'::text)::regclass),
	role "RoleType" NULL,
	uuid uuid NULL,
	status "AccountStatusType" NULL
)
;

CREATE TABLE "UserInformation"
(
	name varchar(100) NULL,
	phone_number varchar(15) NULL,
	filepath varchar(255) NULL,
	id_user integer NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "Appointment" ADD CONSTRAINT "PK_Appointment"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Appointment_Client" ON "Appointment" (id_client ASC)
;

CREATE INDEX "IXFK_AppointmentNotification_Notification" ON "AppointmentNotification" (id_notification ASC)
;

CREATE INDEX "IXFK_Notification_Appointment" ON "AppointmentNotification" (id_appointment ASC)
;

ALTER TABLE "Assistant" ADD CONSTRAINT "PK_Assistant"
	PRIMARY KEY (id_user_account)
;

CREATE INDEX "IXFK_Assistant_UserAccount" ON "Assistant" (id_user_account ASC)
;

ALTER TABLE "AvailabilityTimeSlot" ADD CONSTRAINT "PK_AvailabilityTimeSlot"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_AvailabilityTimeSlot_Assistant" ON "AvailabilityTimeSlot" (id_assistant ASC)
;

ALTER TABLE "Client" ADD CONSTRAINT "PK_Client"
	PRIMARY KEY (id_user_account)
;

CREATE INDEX "IXFK_Client_UserAccount" ON "Client" (id_user_account ASC)
;

CREATE INDEX "IXFK_GeneralNotification_NotificationBase" ON "GeneralNotification" (id_notification ASC)
;

ALTER TABLE "NotificationBase" ADD CONSTRAINT "PK_Notification"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_NotificationBaseUserAccount_NotificationBase" ON "NotificationRecipient" (id_notification ASC)
;

CREATE INDEX "IXFK_NotificationBaseUserAccount_UserAccount" ON "NotificationRecipient" (id_user_account ASC)
;

ALTER TABLE "ScheduledService" ADD CONSTRAINT "PK_ScheduledService"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_AppointmentAssistantService_AssistantService" ON "ScheduledService" ("id_serviceOffer" ASC)
;

CREATE INDEX "IXFK_AppointmentService_Appointment" ON "ScheduledService" (id_appointment ASC)
;

ALTER TABLE "Service" ADD CONSTRAINT "PK_Service"
	PRIMARY KEY (id)
;

ALTER TABLE "ServiceOffer" ADD CONSTRAINT "PK_AssistantService"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_AssistantService_Assistant" ON "ServiceOffer" (id_assistant ASC)
;

CREATE INDEX "IXFK_AssistantService_Service" ON "ServiceOffer" (id_service ASC)
;

CREATE INDEX "IXFK_SystemNotification_NotificationBase" ON "SystemNotification" (id_notification ASC)
;

CREATE INDEX "IXFK_UnavailableTimeSlot_AvailabilityTimeSlot" ON "UnavailableTimeSlot" (id_availability_time_slot ASC)
;

ALTER TABLE "UserAccount" ADD CONSTRAINT "PK_UserAccount"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_UserInformation_UserAccount" ON "UserInformation" (id_user ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE "Appointment" ADD CONSTRAINT "FK_Appointment_Client"
	FOREIGN KEY (id_client) REFERENCES "Client" (id_user_account) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "AppointmentNotification" ADD CONSTRAINT "FK_AppointmentNotification_Notification"
	FOREIGN KEY (id_notification) REFERENCES "NotificationBase" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "AppointmentNotification" ADD CONSTRAINT "FK_Notification_Appointment"
	FOREIGN KEY (id_appointment) REFERENCES "Appointment" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "Assistant" ADD CONSTRAINT "FK_Assistant_UserAccount"
	FOREIGN KEY (id_user_account) REFERENCES "UserAccount" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "AvailabilityTimeSlot" ADD CONSTRAINT "FK_AvailabilityTimeSlot_Assistant"
	FOREIGN KEY (id_assistant) REFERENCES "Assistant" (id_user_account) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "Client" ADD CONSTRAINT "FK_Client_UserAccount"
	FOREIGN KEY (id_user_account) REFERENCES "UserAccount" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "GeneralNotification" ADD CONSTRAINT "FK_GeneralNotification_NotificationBase"
	FOREIGN KEY (id_notification) REFERENCES "NotificationBase" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "NotificationRecipient" ADD CONSTRAINT "FK_NotificationBaseUserAccount_NotificationBase"
	FOREIGN KEY (id_notification) REFERENCES "NotificationBase" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "NotificationRecipient" ADD CONSTRAINT "FK_NotificationBaseUserAccount_UserAccount"
	FOREIGN KEY (id_user_account) REFERENCES "UserAccount" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "ScheduledService" ADD CONSTRAINT "FK_AppointmentAssistantService_AssistantService"
	FOREIGN KEY ("id_serviceOffer") REFERENCES "ServiceOffer" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "ScheduledService" ADD CONSTRAINT "FK_AppointmentService_Appointment"
	FOREIGN KEY (id_appointment) REFERENCES "Appointment" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "ServiceOffer" ADD CONSTRAINT "FK_AssistantService_Assistant"
	FOREIGN KEY (id_assistant) REFERENCES "Assistant" (id_user_account) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "ServiceOffer" ADD CONSTRAINT "FK_AssistantService_Service"
	FOREIGN KEY (id_service) REFERENCES "Service" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "SystemNotification" ADD CONSTRAINT "FK_SystemNotification_NotificationBase"
	FOREIGN KEY (id_notification) REFERENCES "NotificationBase" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "UnavailableTimeSlot" ADD CONSTRAINT "FK_UnavailableTimeSlot_AvailabilityTimeSlot"
	FOREIGN KEY (id_availability_time_slot) REFERENCES "AvailabilityTimeSlot" (id) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE "UserInformation" ADD CONSTRAINT "FK_UserInformation_UserAccount"
	FOREIGN KEY (id_user) REFERENCES "UserAccount" (id) ON DELETE Cascade ON UPDATE Cascade
;

/* Create Table Comments, Sequences for Autonumber Columns */

CREATE SEQUENCE appointment_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE availabilitytimeslot_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE notificationbase_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE scheduledservice_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE service_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE serviceoffer_id_seq INCREMENT 1 START 1
;

CREATE SEQUENCE useraccount_id_seq INCREMENT 1 START 1
;
