@use '../mixins' as mixins;
@use '../breakpoints' as breakpoints;
@use '../variables' as variables;

.button {
  border-radius: variables.$border-radius-sm;
  background-color: variables.$bg-brand;
  color: variables.$text-inverted;
  fill: variables.$text-inverted;
  padding: variables.$padding-md;
  cursor: pointer;
  border: none;
  width: 100%;
  max-height: variables.$button-size-base;
  @include mixins.flex-center;
  gap: variables.$spacing-sm;
  font-size: variables.$font-size-base;

  .button-icon {
    color: variables.$text-inverted;
    // font-size: variables.$font-size-xl;
  }

  * {
    color: inherit;
    fill: inherit;
  }


}

button.primary {
  background-color: variables.$bg-inverted;
  color: variables.$text-inverted;
  // transition: background-color variables.$transition-duration-fast variables.$ease-in, color variables.$transition-duration-fast variables.$ease-in;
}

button.secondary {
  background-color: transparent;
  color: variables.$text-muted;

}

.button.success {
  background-color: variables.$bg-success-text;
  color: variables.$bg-success-text;

  * {
    color: inherit;
    fill: inherit;
  }


}

.button.danger {
  background-color: variables.$bg-error;
  color: variables.$bg-error-text;
  fill: variables.$bg-error-text;

  * {
    color: inherit;
    fill: inherit;
  }

}

.button.error {
  background-color: variables.$text-error;
  color: variables.$text-error;
}

.button.icon {
  background-color: transparent;
  border: 0;
}

.button.unbordered {
  background-color: transparent;
}

.button.bordered {
  background-color: transparent;
  border: 1px solid variables.$border;
  color: variables.$text;

  &:hover {
    border: 1px solid variables.$border-emphasis;
    color: variables.$text-emphasis;
  }


}

.button.disabled {
  background-color: variables.$border;
}
