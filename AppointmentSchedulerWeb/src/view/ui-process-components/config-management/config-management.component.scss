@use '../../../styles/mixins.scss' as mixins;
@use '../../../styles/breakpoints.scss' as breakpoints;
@use '../../../styles/variables.scss' as variables;

.config-management-container {
  @include mixins.flex-center;
  width: 100%;
  padding-top: variables.$padding-xl;

}

.config-management {
  @include mixins.flex-center;
  flex-direction: column;
  width: 90%;
  max-width: variables.$container-md;
  gap: variables.$spacing-large;
}


.item-management {
  width: 100%;
  @include mixins.flex-start;
  flex-direction: column;
  // background-color: red;

  .item-header {
    width: 100%;
    padding: variables.$padding-lg;
    display: flex;
    flex-direction: column;
    gap: variables.$spacing-medium;
    border-bottom: 1px solid variables.$border;

    .item-description {
      display: flex;
      flex-direction: column;
      gap: variables.$spacing-small;
    }
  }

  .item-content {
    padding: variables.$padding-lg;
    width: 100%;
    // background-color: green;
  }
}

.color-theme-buttons {
  display: flex;
  flex-direction: column;
  gap: variables.$spacing-medium;
  // background-color: blue;

  button {
    background-color: transparent;
    border: 0;
    // border:variables.$border-width solid variables.$border-emphasis;
    // border-radius: variables.$border-radius-sm;
  }


  .item-theme {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-direction: column;
    width: 100%;
    max-width: 100%;
    // height: 180px;
    gap: variables.$spacing-medium;

    img {
      width: 100%;
      height: 90%;
      border: variables.$border-width solid variables.$border;
      border-radius: variables.$border-radius-sm;

      &:focus-within {
        border:2px;
      }

    }
  }
}



@include mixins.respond-to(breakpoints.$breakpoint-sm) {
  .config-management {
    width: variables.$container-lg;
  }

  .color-theme-buttons {
    display: flex;
    flex-direction: row;
  }
}
