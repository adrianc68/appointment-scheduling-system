@use '../../../../styles/variables.scss' as variables;
@use '../../../../styles/mixins.scss' as mixins;
@use '../../../../styles/breakpoints.scss' as breakpoints;
@use "sass:math";


.sidebar {
  position: fixed;
  width: 0px;
  height: calc(100svh - variables.$navbar-height);
  transition: width 0.5s 'ease-in-out';
  padding-bottom: variables.$padding-md;
  display: flex;
  overflow: hidden;
  overflow-y: auto;
  flex-direction: column;
  background-color: variables.$bg-muted;
  z-index: variables.$z-index-top;

  .sidebar-bs-operations {
    flex-grow: 1;
  }

  li {

    a,
    button {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      text-decoration: none;
      border: 0;
      border-radius: 0px;
      gap: variables.$spacing-sm;
      ;
      padding-top: variables.$padding-md;
      padding-bottom: variables.$padding-md;
      padding-left: calc(math.div((math.div(1, 4) * 250px), 2) - math.div(2rem, 2));
      color: variables.$text;

      .sidebar-icon {
        min-width: 2rem;
        max-width: 2rem;
        width: 2rem;
        // background-color: red;
        height: 2rem;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      span {
        font-size: variables.$font-size-sm;
        opacity: 0;
        white-space: nowrap;
      }
    }

    a:hover,
    button:hover {
      background-color: variables.$bg-subtle;
    }

    a:focus,
    button:hover {
      background-color: variables.$bg-emphasis;
    }


  }
}

.sidebar.open {
  width: 250px;

  li a,
  li button {
    span {
      width: auto;
      opacity: 1;
    }
  }
}

@include mixins.respond-to(breakpoints.$breakpoint-md) {
  .sidebar {
    height: 100%;
    position: relative;
    left: 0;
    width: math.div(1, 4) * 250px;
  }
}
