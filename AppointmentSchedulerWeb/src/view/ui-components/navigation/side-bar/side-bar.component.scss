@use '../../../../styles/variables.scss' as variables;
@use '../../../../styles/mixins.scss' as mixins;
@use '../../../../styles/breakpoints.scss' as breakpoints;

.sidebar {
  position: fixed;
  width: 0px;
  height: 100%;
  transition: width variables.$transition-duration-medium variables.$ease-in-out;
  overflow: hidden;
  background-color: variables.$sidebar-background-color;

  ul {
    display: flex;
    flex-direction: column;
    gap: 5px;
  }

  li {
    background-color: green;


    a {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      text-decoration: none;
      background-color: gold;
      gap: variables.$spacing-small;
      padding: variables.$padding-md;
      padding-left: calc(variables.$padding-md + 3px);
      color: variables.$sidebar-text-color;


      .sidebar-icon {
        min-width: variables.$icon-size-md;
        max-width: variables.$icon-size-md;
        width: variables.$icon-size-md;
        height: variables.$icon-size-md;
        background-color: blue;
      }

      span {
        font-weight: variables.$font-weight-light;
        font-size: variables.$font-size-sm;
        opacity: 0;
        background-color: blue;
        white-space: nowrap;
      }
    }

    a:hover {
      background-color: variables.$sidebar-hover-color;
    }
  }
}

.sidebar.open {
  width: variables.$sidebar-container-size;

  li a {
    span {
      width: auto;
      opacity: 1;
    }
  }
}

@include mixins.respond-to(breakpoints.$breakpoint-md) {
  .sidebar {

    position: relative;
    left: 0;
    width: calc(1/4 * variables.$sidebar-container-size);
  }

}
